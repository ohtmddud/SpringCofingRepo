# AOP (=Aspect Oriented Programming, 관심 지향 프로그래밍)
  : 공통 관심 사항과 핵심 관심 사항 분리
    ① 핵심 관심 사항(=core concern) : 비지니스 로직 (업무 로직) 
    ② 공통 관심 사항(=cross-cuttng concern) : 부가기능, 많은 곳에서 사용(로깅, 트랙잭션, 보안.... 등)
  
  → 공통 기능과 핵심 기능을 분리해서 각각의 클래스로 작성한 후 적절한 시점에 핵심 로직이 실행될 때, 공통 기능이 같이 실행 되도록 처리
  
  
[AOP 를 적용하기 위해 필요한 것]
 ① 대상: 공통 기능을 적용할 핵심 로직을 담고 있는 메소드

 ② Advice: 공통 기능을 구현한 클래스

 ③ 포인트컷: AOP를 실행 하기 위해서 타겟이 어떤 것인지 정의하기 위한 표현식
   
   [형식]
    ● execution(정규표현식)
      ○ execution( [접근 제어자 / 생략 가능] 리턴타입 패키지명.클래스명.메소드명 (매개변수) )
      ○ execution( * com.multi.erp 
    
	● 공통
	  ○ * : 어떤 문자열이 와도 좋다.
	  ○ .. : 없거나 1 이거나 모든 것에
	  
    ● 리턴 타입
      ○ * : 모든 리턴 타입 의미
      ○ void : void 메소드 
      ○ int : int를 리턴하는 메소드 
      ○ !void : void 가 아닌 모든 메소드
      
    ● 패키지
      ○ com.multi.erp 는 패키지를 정확하게 명시
      ○ com.multi.erp.. : com.mutli.erp 로 시작하는 모든 패키지
      ○ com.multi.erp.*.get* : com.mutli.erp 패키지의 모든 클래스에서 get 으로 시작하는 메소드에 적용 
      ○ com.multi.erp.*.get* : com.mutli.erp 패키지로 시작하는 '4단계' 패키지의 모든 클래스에서 get 으로 시작하는 메소드에 적용 
      
    ● 메소드
      ○ *(..) : 모든 메소드
      ○ get*(..) : get 으로 시작하는 모든 메소드
       
    ● 매개변수
      ○ (..) : 모든 매개변수
      ○ (*) : 매개 변수가 1개인 모든 메소드
      ○ (Integer, ..) : 1개 이상의 매개변수를 갖는 메소드 단, 첫 번째 매개변수는 타입이 Integer
      ○ (Integer, ..) : 두 개의 매개변수를 갖는 메소드 단, 첫 번째 매개변수는 타입이 Integer
      
       
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
        
      